version: '3.8'

services:
  # ------------------------
  # Aider + Code-Server
  # ------------------------
  code-server:
    build:
      context: ..
      dockerfile: docker/Dockerfile.vscode
    ports:
      - "8443:8443"   # code-server UI
      - "5001:5000"   # Aider API mapped to host port 5001 to avoid conflicts
    environment:
      PASSWORD: ${CODE_SERVER_PASSWORD:-aider}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY:-}
      AIDER_MODEL: ${AIDER_MODEL:-}
      SUPABASE_URL: http://supabase-kong:8000
      SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY}
      SUPABASE_SERVICE_KEY: ${SUPABASE_SERVICE_KEY}
      AIDER_CACHE_DIR: /home/coder/.aider/cache
      AIDER_NO_CHECK_UPDATE: 1
    volumes:
      - workspace:/workspace
      - aider-cache:/home/coder/.aider
      - code-server-config:/home/coder/.config
    depends_on:
      supabase-db:
        condition: service_healthy
      supabase-kong:
        condition: service_started
    networks:
      - aider-network
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8443/healthz || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  # ------------------------
  # Supabase Core
  # ------------------------
  supabase-db:
    image: supabase/postgres:15.1.0.117
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - supabase-db:/var/lib/postgresql/data
    networks:
      - aider-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  supabase-kong:
    image: kong:2.8.1
    environment:
      KONG_DATABASE: off
      KONG_DECLARATIVE_CONFIG: /var/lib/kong/kong.yml
      KONG_DNS_ORDER: LAST,A,CNAME
      KONG_PLUGINS: request-transformer,cors,key-auth,acl
    ports:
      - "8000:8000"  # Kong proxy
    volumes:
      - ./supabase/kong.yml:/var/lib/kong/kong.yml:ro
    depends_on:
      supabase-db:
        condition: service_healthy
    networks:
      - aider-network
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # ------------------------
  # Supabase Services
  # ------------------------
  supabase-auth:
    image: supabase/gotrue:v2.99.0
    environment:
      GOTRUE_API_HOST: 0.0.0.0
      GOTRUE_API_PORT: 9999
      API_EXTERNAL_URL: ${API_EXTERNAL_URL:-http://localhost:8000}
      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DB_DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD:-postgres}@supabase-db:5432/postgres?search_path=auth
      GOTRUE_SITE_URL: ${SITE_URL:-http://localhost:8443}
      GOTRUE_JWT_SECRET: ${JWT_SECRET:-super-secret-jwt-token-with-at-least-32-characters-long}
      GOTRUE_JWT_EXP: 3600
      GOTRUE_DISABLE_SIGNUP: false
    depends_on:
      supabase-db:
        condition: service_healthy
    networks:
      - aider-network
    restart: unless-stopped

  supabase-rest:
    image: postgrest/postgrest:v11.2.0
    environment:
      PGRST_DB_URI: postgresql://postgres:${POSTGRES_PASSWORD:-postgres}@supabase-db:5432/postgres
      PGRST_DB_SCHEMAS: public,storage
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: ${JWT_SECRET:-super-secret-jwt-token-with-at-least-32-characters-long}
      PGRST_DB_USE_LEGACY_GUCS: false
    depends_on:
      supabase-db:
        condition: service_healthy
    networks:
      - aider-network
    restart: unless-stopped

  supabase-realtime:
    image: supabase/realtime:v2.10.1
    environment:
      PORT: 4000
      DB_HOST: supabase-db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      DB_NAME: postgres
      DB_AFTER_CONNECT_QUERY: SET search_path TO _realtime
      DB_ENC_KEY: supabaserealtime
      API_JWT_SECRET: ${JWT_SECRET:-super-secret-jwt-token-with-at-least-32-characters-long}
      FLY_ALLOC_ID: fly123
      FLY_APP_NAME: realtime
      SECRET_KEY_BASE: ${REALTIME_SECRET_KEY:-dummy-secret}
      ERL_AFLAGS: -proto_dist inet_tcp
      ENABLE_TAILSCALE: false
      DNS_NODES: ''
    depends_on:
      supabase-db:
        condition: service_healthy
    networks:
      - aider-network
    restart: unless-stopped

  supabase-storage:
    image: supabase/storage-api:v0.40.4
    environment:
      ANON_KEY: ${SUPABASE_ANON_KEY}
      SERVICE_KEY: ${SUPABASE_SERVICE_KEY}
      POSTGREST_URL: http://supabase-rest:3000
      PGRST_JWT_SECRET: ${JWT_SECRET:-super-secret-jwt-token-with-at-least-32-characters-long}
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD:-postgres}@supabase-db:5432/postgres
      FILE_SIZE_LIMIT: 52428800
      STORAGE_BACKEND: file
      FILE_STORAGE_BACKEND_PATH: /var/lib/storage
      TENANT_ID: stub
      REGION: stub
      GLOBAL_S3_BUCKET: stub
    volumes:
      - supabase-storage:/var/lib/storage
    depends_on:
      supabase-db:
        condition: service_healthy
    networks:
      - aider-network
    restart: unless-stopped

# ------------------------
# Volumes & Networks
# ------------------------
volumes:
  workspace:
  aider-cache:
  code-server-config:
  supabase-db:
  supabase-storage:

networks:
  aider-network:
    driver: bridge
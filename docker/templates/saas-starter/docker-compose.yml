version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: saas-starter-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./supabase/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Supabase Auth
  auth:
    image: supabase/gotrue:v2.99.0
    container_name: saas-starter-auth
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      GOTRUE_API_HOST: 0.0.0.0
      GOTRUE_API_PORT: 9999
      API_EXTERNAL_URL: ${SUPABASE_URL:-http://localhost:8000}
      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DB_DATABASE_URL: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-postgres}?search_path=auth
      GOTRUE_SITE_URL: ${NEXT_PUBLIC_APP_URL:-http://localhost:3000}
      GOTRUE_URI_ALLOW_LIST: "*"
      GOTRUE_DISABLE_SIGNUP: "false"
      GOTRUE_JWT_ADMIN_ROLES: service_role
      GOTRUE_JWT_AUD: authenticated
      GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
      GOTRUE_JWT_EXP: 3600
      GOTRUE_JWT_SECRET: ${JWT_SECRET}
      GOTRUE_EXTERNAL_EMAIL_ENABLED: "true"
      GOTRUE_MAILER_AUTOCONFIRM: "true"
      GOTRUE_SMTP_ADMIN_EMAIL: admin@example.com
      GOTRUE_SMTP_HOST: smtp.example.com
      GOTRUE_SMTP_PORT: 587
      GOTRUE_SMTP_SENDER_NAME: SaaS Starter
      GOTRUE_MAILER_URLPATHS_INVITE: /auth/confirm
      GOTRUE_MAILER_URLPATHS_CONFIRMATION: /auth/confirm
      GOTRUE_MAILER_URLPATHS_RECOVERY: /auth/reset-password
      GOTRUE_MAILER_URLPATHS_EMAIL_CHANGE: /auth/confirm
    ports:
      - "9999:9999"

  # Supabase Kong (API Gateway)
  kong:
    image: kong:2.8-alpine
    container_name: saas-starter-kong
    restart: unless-stopped
    depends_on:
      - auth
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /var/lib/kong/kong.yml
      KONG_DNS_ORDER: LAST,A,CNAME
      KONG_PLUGINS: request-transformer,cors,key-auth,acl
    ports:
      - "8000:8000"
    volumes:
      - ./supabase/kong.yml:/var/lib/kong/kong.yml:ro

  # Next.js Application
  nextjs:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: saas-starter-nextjs
    restart: unless-stopped
    depends_on:
      - db
      - kong
    environment:
      NEXT_PUBLIC_SUPABASE_URL: ${NEXT_PUBLIC_SUPABASE_URL:-http://localhost:8000}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      NEXT_PUBLIC_APP_URL: ${NEXT_PUBLIC_APP_URL:-http://localhost:3000}
    ports:
      - "3000:3000"
    volumes:
      - ./app:/app
      - /app/node_modules
      - /app/.next

  # Code-Server (VS Code in browser)
  code-server:
    build:
      context: ../../
      dockerfile: docker/Dockerfile.vscode
    container_name: saas-starter-code-server
    restart: unless-stopped
    environment:
      PASSWORD: ${CODE_SERVER_PASSWORD:-aider}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    ports:
      - "8443:8080"
      - "5000:5000"
    volumes:
      - ./app:/home/coder/project
      - code_server_data:/home/coder/.local/share/code-server

volumes:
  postgres_data:
  code_server_data:

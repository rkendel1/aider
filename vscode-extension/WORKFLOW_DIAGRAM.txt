╔══════════════════════════════════════════════════════════════════════════╗
║                    LIVE PREVIEW FEATURE WORKFLOW                          ║
╚══════════════════════════════════════════════════════════════════════════╝

┌─────────────────────────────────────────────────────────────────────────┐
│ STEP 1: User Opens Live Preview Panel                                   │
└─────────────────────────────────────────────────────────────────────────┘
         │
         ▼
    ┌────────────────────────────────┐
    │  Aider Sidebar > Live Preview  │
    │  ┌──────────────────────────┐  │
    │  │ URL: [localhost:3000  ]  │  │
    │  │ [Load] [Inspector Off]   │  │
    │  └──────────────────────────┘  │
    └────────────────────────────────┘
         │
         ▼
┌─────────────────────────────────────────────────────────────────────────┐
│ STEP 2: Load Application                                                │
└─────────────────────────────────────────────────────────────────────────┘
         │
         ▼
    ┌────────────────────────────────┐
    │  Preview loads in iframe       │
    │  ┌──────────────────────────┐  │
    │  │                          │  │
    │  │   Your React App         │  │
    │  │   ┌─────────┐            │  │
    │  │   │ Button  │  [Card]    │  │
    │  │   └─────────┘            │  │
    │  │                          │  │
    │  └──────────────────────────┘  │
    └────────────────────────────────┘
         │
         ▼
┌─────────────────────────────────────────────────────────────────────────┐
│ STEP 3: Enable Inspector                                                │
└─────────────────────────────────────────────────────────────────────────┘
         │
         ▼
    User clicks "Inspector Off"
         │
         ▼
    Button changes to "Inspector On"
         │
         ▼
    Event listeners attached to iframe content
         │
         ▼
┌─────────────────────────────────────────────────────────────────────────┐
│ STEP 4: Hover Over Elements (Visual Feedback)                           │
└─────────────────────────────────────────────────────────────────────────┘
         │
         ▼
    ┌────────────────────────────────┐
    │  Preview with highlighting     │
    │  ┌──────────────────────────┐  │
    │  │                          │  │
    │  │   Your React App         │  │
    │  │   ┌─────────┐            │  │
    │  │   │ Button  │◄─────────── Mouse hover
    │  │   └─────────┘            │  │
    │  │      ▲                   │  │
    │  │      │ Highlighted!      │  │
    │  │      └─────────────      │  │
    │  └──────────────────────────┘  │
    └────────────────────────────────┘
         │
         ▼
┌─────────────────────────────────────────────────────────────────────────┐
│ STEP 5: Click Element to Inspect                                        │
└─────────────────────────────────────────────────────────────────────────┘
         │
         ▼
    Click event captured
         │
         ▼
    ┌──────────────────────────────────────┐
    │ extractElementData() executes:       │
    │                                      │
    │ ✓ Get element tag name               │
    │ ✓ Get CSS classes                    │
    │ ✓ Get inline styles                  │
    │ ✓ Detect React component name        │
    │ ✓ Generate XPath                     │
    └──────────────────────────────────────┘
         │
         ▼
    InspectorData object created:
    {
      elementType: "button",
      cssClasses: ["btn", "primary"],
      inlineStyles: "padding: 10px;",
      componentName: "SubmitButton",
      xpath: "/html/body/div[1]/button"
    }
         │
         ▼
┌─────────────────────────────────────────────────────────────────────────┐
│ STEP 6: Copy to Clipboard                                               │
└─────────────────────────────────────────────────────────────────────────┘
         │
         ▼
    postMessage to extension host
         │
         ▼
    handleInspectorData() receives data
         │
         ▼
    Format data:
    ┌──────────────────────────────────────┐
    │ Component: SubmitButton              │
    │ Element: <button>                    │
    │ CSS Classes: btn, primary            │
    │ Inline Styles: padding: 10px;        │
    │ XPath: /html/body/div[1]/button      │
    └──────────────────────────────────────┘
         │
         ▼
    vscode.env.clipboard.writeText(formatted)
         │
         ▼
    ✓ Copied to clipboard!
         │
         ▼
┌─────────────────────────────────────────────────────────────────────────┐
│ STEP 7: User Notification                                               │
└─────────────────────────────────────────────────────────────────────────┘
         │
         ▼
    ┌──────────────────────────────────────────────┐
    │ ℹ️  Copied component info to clipboard       │
    │    [Paste to Chat]  [Dismiss]                │
    └──────────────────────────────────────────────┘
         │
         ▼
┌─────────────────────────────────────────────────────────────────────────┐
│ STEP 8: Paste to Chat (User clicks button)                              │
└─────────────────────────────────────────────────────────────────────────┘
         │
         ▼
    onInspectorData callback triggered
         │
         ▼
    chatProvider.pasteToInput(formattedText)
         │
         ▼
    webview.postMessage({ type: 'pasteText', text: ... })
         │
         ▼
    ┌────────────────────────────────┐
    │  Chat Panel                    │
    │  ┌──────────────────────────┐  │
    │  │ Messages                 │  │
    │  │                          │  │
    │  ├──────────────────────────┤  │
    │  │ Input:                   │  │
    │  │ Component: SubmitButton  │  │◄── Text pasted!
    │  │ CSS Classes: btn, primary│  │
    │  │                          │  │
    │  │ [Send]                   │  │
    │  └──────────────────────────┘  │
    └────────────────────────────────┘
         │
         ▼
┌─────────────────────────────────────────────────────────────────────────┐
│ STEP 9: User Adds Instructions                                          │
└─────────────────────────────────────────────────────────────────────────┘
         │
         ▼
    ┌────────────────────────────────┐
    │ Component: SubmitButton        │
    │ CSS Classes: btn, primary      │
    │                                │
    │ Change the button color to     │
    │ green and make it larger       │
    └────────────────────────────────┘
         │
         ▼
┌─────────────────────────────────────────────────────────────────────────┐
│ STEP 10: Send to Aider                                                  │
└─────────────────────────────────────────────────────────────────────────┘
         │
         ▼
    Message sent to Aider backend
         │
         ▼
    Aider processes request with precise component info
         │
         ▼
    Code updated!
         │
         ▼
    ┌────────────────────────────────┐
    │ ✓ Updated SubmitButton         │
    │ ✓ Changed color to green       │
    │ ✓ Increased size               │
    │ ✓ Committed changes            │
    └────────────────────────────────┘
         │
         ▼
    🎉 Success! Component updated with precision!


╔══════════════════════════════════════════════════════════════════════════╗
║                    KEY BENEFITS                                           ║
╠══════════════════════════════════════════════════════════════════════════╣
║ • Visual component identification - no code hunting                      ║
║ • Precise targeting - component names and CSS classes                    ║
║ • One-click workflow - inspect, copy, paste, send                        ║
║ • Time savings - eliminates manual component discovery                   ║
║ • Reduced errors - exact component/CSS information                       ║
║ • Better UX - intuitive visual interface                                 ║
╚══════════════════════════════════════════════════════════════════════════╝

